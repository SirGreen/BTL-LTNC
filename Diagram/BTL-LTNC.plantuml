@startuml quan_ly_xe
skinparam groupInheritance 3

package TransportationFactory <<Folder>>{

    class Transportation{
        # int: Capacity
        # int: Size
        # string: TypeOfFuel
        # CarStatus: Status
        + WarrantyService: Warranty
        + Journey: JourneyInCharge
        + DisplayInfo()
    }

    class Container{  
    }

    class Car{
    }

    class Truck{
    }

    class Coach {
}
}

class WarrantyService{
    - bool: IsWarranty
    - DateTime: WarrantyTime
    - WarrantyHistory: WarrantyHis

    - ChangeWarrantyStatus()
    + ShowTimeLeft()
    + UpdateTimeLeft()
    + Warranty()
    + DisplayStatus()
    + DisplayWarrantyHistory()
}

class WarrantyHistory{
    - DateTime: WarrantyDate
    + Display()
}

enum CarStatus{
    1: Active
    2: UnderMaintainace
    3: NotActive
}
class Driver{
    - string: Name
    - string: PhoneNumber
    - string: Address
    + DrivingExperience: Quality
    - image: DriverLicense
    + Journey: JourneyInCharge
    + JourneyHistory: JourneyHis
    + DisplayInfo()
    + CompleteJourney() 
}
note left of Driver::CompleteJourney()
    AddJourneyHistory
    DeleteJourney
end note

class Journey{
    - Transportation: Vehicle
    - Driver: DriverInCharge
    - double: Kilomet
    - double: Price
    - DateTime: Time
    - string: StartLocation
    - string: EndLocation
    + DisplayInfo()
}

class JourneyHistory{
    + int: Kilomet
    + double: Price
    + Transportation: Vehicle
}

class System <<Singleton>>{
    + AddNewVehicle()
    + AddNewDriver()
    --
    + DisplayVehicle()
    + DisplayDrive()
    --
    + AddJourney()
    - CalDisAndPrice()
    + UpdateVehicleInfo()
}

note left of System::UpdateVehicleInfo
    - Update Vehicle Status 
    - Update Warranty Status 
    base on Time of Journey
    When the Driver CompleteJourney()
end note

note left of System::AddJourney
    - Find Driver & Vehicle
    - Calculate Kilomet 
    & Time & Price
end note

enum DrivingExperience{
    1: Truck
    2: Car
    3: Coach
    4: Container
}

Transportation <|-- Truck
Transportation <|-- Car
Transportation <|-- Coach
Transportation <|-- Container
Transportation -right- WarrantyService
Driver -right- DrivingExperience
Driver -down-*Journey
CarStatus -up- Transportation
WarrantyService "1" *-up- "1..*" WarrantyHistory
System -down[dashed]-> Transportation: Adds & Updates & Assign for Journey
System -left[dashed]-> Driver: Adds & Journey assignment & Observe
Journey <-right[dashed]- System: Create & Observe
Transportation -left-*Journey
Driver "1"-left-"0..*" JourneyHistory
@enduml